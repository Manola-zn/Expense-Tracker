@model ExpenseTrackerApp.Models.Transaction

@{
    Layout = null;

    var defaultDate = Model.transactionID == 0 ? DateTime.Now.ToString("yyyy-MM-dd") : Model.transactionDate.ToString("yyyy-MM-dd");
}

<html>
<head>
    <script src="~/Scripts/jquery-3.7.1.min.js"></script>
</head>

<body>
    @using (Html.BeginForm("AddOrEdit", "Transaction", FormMethod.Post, new { id = "CreateForm" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.transactionID)

        <table>
            <tr>
                <th>
                    @Html.LabelFor(model => model.transactionDate, "Date")
                </th>
                <td>
                    @Html.EditorFor(model => model.transactionDate, new { htmlAttributes = new { @class = "form-control", id = "date", Value = defaultDate } })
                </td>
            </tr>
            <tr>
                <td>&nbsp;</td>
            </tr>
            <tr>
                <th>
                    @Html.LabelFor(model => model.categoryID, "Category")
                </th>
                <td>
                    @Html.DropDownListFor(model => model.categoryID, (IEnumerable<SelectListItem>)ViewBag.Categories, new { @class = "form-control", id = "ddlCategory" })
                </td>
            </tr>
            <tr>
                <td>&nbsp;</td>
            </tr>
            <tr>
                <th>
                    @Html.LabelFor(model => model.transactionAmount, "Amount")
                </th>
                <td>
                    @Html.EditorFor(model => model.transactionAmount, new { htmlAttributes = new { @class = "form-control", id = "amount" } })
                </td>
            </tr>
            <tr>
                <td>&nbsp;</td>
            </tr>
            <tr>
                <th>
                    @Html.LabelFor(model => model.transactionNote, "Note")
                </th>
                <td>
                    @Html.TextAreaFor(model => model.transactionNote, 5, 35, new { htmlAttributes = new { @class = "form-control", id = "notes" } })
                </td>
            </tr>
            <tr>
                <td>&nbsp;</td>
            </tr>
            <tr>
                <td>&nbsp;</td>
                <td>
                    <input type="submit" value="Submit" class="btn btn-primary" id="sumbtn" onclick="Validate(this, event);" />
                    <input type="button" value="Cancel" class="btn btn-danger" onclick="location.href='@Url.Action("Index", "Transaction")'" />
                </td>
            </tr>
        </table>
    }
    
    <!--SweetAlert-->
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/bootstrap.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js"></script>

    <script>
        function validateData() {
            var date = $("#date").val();
            var category = $("select[name=categoryID]").val();
            var amount = $("#amount").val();
            var note = $("textarea[name=transactionNote]").val();

            if (date == "" || date == undefined) {
                swal("Please pick a date!");
                return false;
            } else if (category == "" || category == undefined) {
                swal("Please select a category name!");
                return false;
            } else if (amount == "" || amount == undefined) {
                swal("Please enter amount!");
                return false;
            } else if (note == "" || note == undefined) {
                swal("Please enter note!");
                return false;
            } else {
                return true;
            }
        }
    </script>

    <script>
        function Validate(ctl, event)
        {

            event.preventDefault();

            swal({
                    title: "Do you want to save it?",
                    text: "Please check Information before Submiting!",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Yes, save it!",
                    cancelButtonText: "No, cancel!",
                    closeOnConfirm: true,
                    closeOnCancel: false
                },
                function(isConfirm)
                 {
                    if (isConfirm)
                    {
                        if (validateData() == true) {
                            $("#CreateForm").submit();
                            swal("Category Details Inserted Successfully");

                        }
                    } else
                    {
                        var url = '@Url.Action("Index", "Transaction")';
                        window.location.href = url;
                        swal("Cancelled", "You have Cancelled Form Submission!", "error");
                    }
                });
        }

        function clearfields() {
            $('input[type="text"]').val(""); //clears text boxes
            $('select').val("");
        }
    </script>
</body>
</html>
